<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="performance appraisal">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.${project.version}. Please contact support@blazemeter.com for further support.</stringProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">qa.workshine.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="content-type" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer ${__P(jwtToken)}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Generate appraisal">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/identity/login">
            <stringProp name="TestPlan.comments">login credentials</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/identity/login</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;username&quot;:&quot;narayana.vasantavada+7860@infyshine.com&quot;,&quot;password&quot;:&quot;INFY@123&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">jwtToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">props.put(&quot;jwtToken&quot;, vars.get(&quot;jwtToken&quot;))
</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON oranizationid">
              <stringProp name="JSONPostProcessor.referenceNames">organizationId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON employeeid">
              <stringProp name="JSONPostProcessor.referenceNames">employeeId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.employeeId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON locationid">
              <stringProp name="JSONPostProcessor.referenceNames">locationId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.locationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Appraisal generate">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/locations/${organizationId}/all">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/locations/${organizationId}/all</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/appraisals/${organizationId}/byLocation/undefined" enabled="false">
            <stringProp name="TestPlan.comments">Web application is also fail</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/appraisals/40/byLocation/undefined</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/appraisals/40/byLocation/${locationId}" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/appraisals/${organizationId}/byLocation/${locationId}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/employees/40/all?status=Active">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/employees/${organizationId}/all</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">Active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/employees/40/byLocation?ids=49&amp;status=Active">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/employees/${organizationId}/byLocation</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ids" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ids</stringProp>
                  <stringProp name="Argument.value">${locationId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="status" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">status</stringProp>
                  <stringProp name="Argument.value">Active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/appraisals/40/save">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/appraisals/${organizationId}/save</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;organizationId&quot;:40,&quot;locationId&quot;:49,&quot;reviewPeriodFrom&quot;:&quot;2025-04-01&quot;,&quot;reviewPeriodTo&quot;:&quot;2025-04-30&quot;,&quot;managerReviewDeadline&quot;:&quot;2025-07-03&quot;,&quot;submissionDeadline&quot;:&quot;2025-07-02&quot;,&quot;peerSubmissionDeadline&quot;:&quot;2025-07-03&quot;,&quot;hrReviewDeadline&quot;:&quot;2025-07-04&quot;,&quot;generateAppraisalDTOs&quot;:[{&quot;employeeId&quot;:75,&quot;managerName&quot;:&quot;Manoj Kumar&quot;,&quot;managerEmail&quot;:&quot;narayana.vasantavada+7863@infyshine.com&quot;,&quot;managerTitle&quot;:&quot;Mr.&quot;,&quot;hasPeer&quot;:true,&quot;peerId&quot;:73}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:\s*(\d+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Apply performance appraisal">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/identity/login">
            <stringProp name="TestPlan.comments">login credentials</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/identity/login</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;username&quot;:&quot;narayana.vasantavada+7865@infyshine.com&quot;,&quot;password&quot;:&quot;INFY@123&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON token">
              <stringProp name="JSONPostProcessor.referenceNames">jwtToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">props.put(&quot;jwtToken&quot;, vars.get(&quot;jwtToken&quot;))
</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON oranizationid">
              <stringProp name="JSONPostProcessor.referenceNames">organizationId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON employeeid">
              <stringProp name="JSONPostProcessor.referenceNames">employeeId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.employeeId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON locationid" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">locationId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.locationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Apply appraisal">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/appraisals/40/byEmployee?employeeId=75">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/appraisals/${organizationId}/byEmployee</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="employeeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">employeeId</stringProp>
                  <stringProp name="Argument.value">${employeeId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/organizationCountry/40/all">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/organizationCountry/${organizationId}/all</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/organizationCountry/40/all">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/organizationCountry/${organizationId}/all</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/appraisals/40/one/47">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/appraisals/${organizationId}/one/48</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/appraisals/40/update/47">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/appraisals/${organizationId}/update/48</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:48,&quot;name&quot;:&quot;2025-04-01 to 2025-04-30&quot;,&quot;code&quot;:&quot;V005&quot;,&quot;employeeId&quot;:75,&quot;peerId&quot;:73,&quot;hasPeer&quot;:true,&quot;employeeName&quot;:&quot;krishna Kumar&quot;,&quot;firstName&quot;:&quot;5EUtbr3E6uCL/KZ0xgNWUS/CzwVxeXd9x/1izJQdd3E=&quot;,&quot;lastName&quot;:&quot;/FpG/uyyDGHt5/Ad9/URLUGYq0CBSHwhOhyCvEBK18g=&quot;,&quot;dateOfJoining&quot;:&quot;2025-04-01&quot;,&quot;designation&quot;:&quot;QA &quot;,&quot;locationId&quot;:49,&quot;locationName&quot;:&quot;Visakhapatnam-India&quot;,&quot;skills&quot;:&quot;[]&quot;,&quot;organizationId&quot;:40,&quot;submittedDate&quot;:null,&quot;reviewedDate&quot;:null,&quot;status&quot;:&quot;Submitted&quot;,&quot;title&quot;:&quot;Mr.&quot;,&quot;selfreviewDTO&quot;:{&quot;id&quot;:null,&quot;accomplishments&quot;:{&quot;empComments&quot;:&quot;dfgfdg&quot;,&quot;mgrComments&quot;:null},&quot;additionalSkills&quot;:{&quot;empComments&quot;:&quot;fdgfg&quot;,&quot;mgrComments&quot;:null},&quot;jobKnowl&quot;:{&quot;employeeReview&quot;:&quot;fdgfdg&quot;,&quot;peerReview&quot;:null,&quot;mgrRating&quot;:null},&quot;workQuality&quot;:{&quot;employeeReview&quot;:&quot;dfgfdg&quot;,&quot;peerReview&quot;:null,&quot;mgrRating&quot;:null},&quot;commSkills&quot;:{&quot;employeeReview&quot;:&quot;fdgfdgd&quot;,&quot;peerReview&quot;:null,&quot;mgrRating&quot;:null},&quot;teamWork&quot;:{&quot;employeeReview&quot;:&quot;fdgfdg&quot;,&quot;peerReview&quot;:null,&quot;mgrRating&quot;:null},&quot;probSolve&quot;:{&quot;employeeReview&quot;:&quot;fdgfdg&quot;,&quot;peerReview&quot;:null,&quot;mgrRating&quot;:null},&quot;goalDTOs&quot;:[{&quot;name&quot;:&quot;fgdfgdfg&quot;,&quot;deadline&quot;:&quot;15&quot;,&quot;goalStatusEnum&quot;:&quot;0&quot;}],&quot;mgrGoalDTOs&quot;:[]},&quot;regulatoryDTO&quot;:{&quot;id&quot;:47,&quot;inTimeframe&quot;:{&quot;empRating&quot;:2,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;standards&quot;:{&quot;empRating&quot;:2,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;attendance&quot;:{&quot;empRating&quot;:2,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;loyalty&quot;:{&quot;empRating&quot;:2,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;collaborate&quot;:{&quot;empRating&quot;:1,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;performance&quot;:{&quot;empRating&quot;:1,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;effectiveness&quot;:{&quot;empRating&quot;:1,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;listening&quot;:{&quot;empRating&quot;:1,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;proactiveness&quot;:{&quot;empRating&quot;:2,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;policies&quot;:{&quot;empRating&quot;:1,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;adaptSituations&quot;:{&quot;empRating&quot;:2,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;consistent&quot;:{&quot;empRating&quot;:2,&quot;mgrRating&quot;:null,&quot;peerRating&quot;:null},&quot;empOverallRating&quot;:1.5833333333333333,&quot;mrgOverallRating&quot;:null,&quot;peerOverallRating&quot;:null},&quot;managerAssessmentDTO&quot;:{&quot;id&quot;:null,&quot;lastYearAchievements&quot;:null,&quot;charsHelping&quot;:null,&quot;charsHindering&quot;:null,&quot;agreedItemsForImprovement&quot;:null,&quot;empTrainingneeded&quot;:null,&quot;overallScore&quot;:1},&quot;trainingDetailsDTOs&quot;:[{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;sdfsdf&quot;,&quot;trainingTime&quot;:&quot;sdfsd&quot;,&quot;duration&quot;:&quot;12&quot;,&quot;trainingStatusEnum&quot;:0}],&quot;hrReviewDTO&quot;:{&quot;id&quot;:null,&quot;compensationReviewDTO&quot;:[{&quot;id&quot;:null,&quot;year&quot;:null,&quot;designation&quot;:null,&quot;rating&quot;:0,&quot;hike&quot;:0,&quot;previousCTC&quot;:null,&quot;currentCTC&quot;:null}],&quot;year&quot;:null,&quot;recommendedDesignation&quot;:null,&quot;overallRating&quot;:0,&quot;percentageOfHike&quot;:0,&quot;recommendedCTC&quot;:null,&quot;lastRevision&quot;:0,&quot;currentRevision&quot;:0,&quot;letterIssuedDate&quot;:null,&quot;lastYearEvaluationDate&quot;:null,&quot;recievedDate&quot;:null,&quot;closingDate&quot;:null,&quot;signatureOfHR&quot;:null,&quot;currentDate&quot;:null},&quot;managerEmail&quot;:&quot;narayana.vasantavada+7863@infyshine.com&quot;,&quot;projects&quot;:&quot;Workshine&quot;,&quot;managerName&quot;:&quot;Manoj Kumar&quot;,&quot;countryId&quot;:112,&quot;managerContactNumber&quot;:&quot;8977739595&quot;,&quot;managerReviewDeadline&quot;:&quot;2025-07-03&quot;,&quot;submissionDeadline&quot;:&quot;2025-07-02&quot;,&quot;peerSubmissionDeadline&quot;:&quot;2025-07-03&quot;,&quot;generatedDate&quot;:&quot;2025-07-01&quot;,&quot;hrReviewDeadline&quot;:&quot;2025-07-04&quot;,&quot;reviewPeriodFrom&quot;:&quot;2025-01-01&quot;,&quot;reviewPeriodTo&quot;:&quot;2025-01-31&quot;,&quot;extraContribution&quot;:&quot;sdfsdfs&quot;,&quot;employeeComments&quot;:&quot;sdfsdf&quot;,&quot;managerComments&quot;:null,&quot;peerComments&quot;:null,&quot;hrComments&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://qa.workshine.com:8443/api/appraisals/40/byEmployee?employeeId=75">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">8443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/appraisals/40/byEmployee</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="employeeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">employeeId</stringProp>
                  <stringProp name="Argument.value">${employeeId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
